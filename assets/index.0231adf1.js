class t{constructor(t,i,s,o){this.id="solid",this.properties={isSolid:!0},this.element=null,this.faces={front:null,left:null,right:null,back:null,top:null,bottom:null},this.showFaces={front:!1,left:!1,right:!1,back:!1,top:!1,bottom:!1},this.faceDirections={front:[0,0,1],left:[-1,0,0],right:[1,0,0],back:[0,0,-1],top:[0,1,0],bottom:[0,-1,0]},this.x=t,this.y=i,this.z=s,this.world=o,this.initialize()}initialize(){this.element=document.createElement("div"),this.element.classList.add("cube"),this.element.style.transform=`\n      translateX(${this.x}rem)\n      translateY(${-this.y}rem)\n      translateZ(${this.z}rem)\n    `}update(){for(let t in this.faceDirections){const i=this.faceDirections[t],s=this.world.getBlock(this.x+i[0],this.y+i[1],this.z+i[2]);this.showFaces[t]=!0,s&&"air"!==s.id&&(this.showFaces[t]=!1)}Object.keys(this.showFaces).forEach((t=>{const i=this.showFaces,s=this.faces;i[t]?null===s[t]&&(s[t]=document.createElement("div"),s[t].classList.add(t),this.element.appendChild(s[t])):null!==s[t]&&s[t].remove()}))}getPosition(){return{x:this.x,y:this.y,z:this.z}}isSolid(){return this.properties.isSolid}}class i extends t{constructor(t,i,s,o){super(t,i,s,o),this.id="air",this.properties.isSolid=!1}initialize(){}update(){}}const s=document.querySelector("#game-viewport"),o=document.querySelector("#scene"),e=new class{constructor(t){this.blocks={},this.entities=[],this.scene=t;for(let i=0;i<16;i++)for(let t=0;t<4;t++)for(let s=0;s<16;s++)this.createBlock(i,t,s);for(let i=0;i<16;i++)for(let t=0;t<4;t++)for(let s=0;s<16;s++)this.getBlock(i,t,s).update()}loop(t){this.entities.forEach((i=>i.loop(t)))}createBlock(s,o,e){let h;h=Math.random()>.75?new t(s,o,e,this):new i(s,o,e,this),Object.keys(this.blocks).find((t=>parseInt(t)===s))||(this.blocks[s]={}),Object.keys(this.blocks[s]).find((t=>parseInt(t)===o))||(this.blocks[s][o]={}),this.blocks[s][o][e]=h,"air"!==h.id&&this.scene.appendChild(h.element)}getBlock(t,i,s){return Object.keys(this.blocks).find((i=>parseInt(i)===t))&&Object.keys(this.blocks[t]).find((t=>parseInt(t)===i))&&Object.keys(this.blocks[t][i]).find((t=>parseInt(t)===s))&&this.blocks[t][i][s]?this.blocks[t][i][s]:null}addEntity(t){this.entities.push(t)}}(o),h=new class{constructor(t,i){this.rotation={yaw:0,pitch:0},this.bindedEntity={position:null},this.scene=t,this.position={x:((i||{}).position||{}).x||0,y:((i||{}).position||{}).y||0,z:((i||{}).position||{}).z||0},this.setYaw(((i||{}).rotation||{}).yaw||0),this.setPitch(((i||{}).rotation||{}).pitch||0)}loop(){if(null!==this.bindedEntity.position){const{x:t,y:i,z:s}=this.bindedEntity.position.getPosition(),{x:o,y:e,z:h}=this.bindedEntity.position.getCameraOffset();this.position.x=t+o,this.position.y=i+e,this.position.z=s+h}this.scene.style.setProperty("--yaw",this.rotation.yaw+"deg"),this.scene.style.setProperty("--pitch",-this.rotation.pitch+"deg"),this.scene.style.setProperty("--x",-this.position.x+"rem"),this.scene.style.setProperty("--y",this.position.y+"rem"),this.scene.style.setProperty("--z",-this.position.z+"rem")}rotate(t,i){this.setYaw(this.rotation.yaw+t),this.setPitch(this.rotation.pitch+i)}setYaw(t){t>360&&(t-=360),t<0&&(t+=360),this.rotation.yaw=t}setPitch(t){this.rotation.pitch=Math.min(Math.max(t,-90),90)}bindPosition(t){this.bindedEntity.position=t}getRotation(){return this.rotation}}(o,{rotation:{yaw:0,pitch:70}}),n=new class{constructor(t,i,s={}){this.mouseLocked=!1,this.mouseEvents=[],this.keyboardEvents=[],this.keyboardLoopEvents=[],this.keys={},this.mouseSensitivity=s.mouseSensitivity||.2,this.keyMaps=i,Object.keys(i).forEach((t=>{this.keys[t]=!1})),t.addEventListener("click",(()=>t.requestPointerLock())),document.addEventListener("pointerlockchange",(()=>this.mouseLocked=document.pointerLockElement===t)),document.body.addEventListener("keydown",(t=>{t.ctrlKey&&-1!=="cvxspwuaz".indexOf(t.key)&&t.preventDefault()})),document.addEventListener("mousemove",(t=>{this.mouseLocked&&this.mouseEvents.forEach((i=>i(t.movementX*this.mouseSensitivity,t.movementY*this.mouseSensitivity)))})),document.addEventListener("keydown",(t=>{if(!t.repeat){for(let i in this.keyMaps)t.code===this.keyMaps[i]&&(this.keys[i]=!0);this.keyboardEvents.forEach((i=>i(Object.keys(this.keyMaps).find((i=>this.keyMaps[i]===t.code)),!0)))}})),document.addEventListener("keyup",(t=>{for(let i in this.keyMaps)t.code===this.keyMaps[i]&&(this.keys[i]=!1);this.keyboardEvents.forEach((i=>i(Object.keys(this.keyMaps).find((i=>this.keyMaps[i]===t.code)),!1)))}))}loop(){this.keyboardLoopEvents.forEach((t=>{this.keys[t.key]===t.pressed&&t.fn()}))}onMouse(t){this.mouseEvents.push(t)}onKeyboard(t){this.keyboardEvents.push(t)}onKeyboardLoop(t,i,s){this.keyboardLoopEvents.push({key:t,pressed:i,fn:s})}}(s,{up:"KeyW",left:"KeyA",down:"KeyS",right:"KeyD",jump:"Space",crouch:"ControlLeft"},{mouseSensitivity:.1}),r=new class extends class{constructor(t,{x:i,y:s,z:o}){this.rotation={yaw:0,pitch:0},this.motion={x:0,y:0,z:0},this.bbox={x:-.5,y:-.5,z:-.5,w:1,h:1,d:1},this.world=t,this.position={x:i,y:s,z:o}}loop(t){}getPosition(){return this.position}}{constructor(t,{x:i,y:s,z:o}){super(t,{x:i,y:s,z:o}),this.walkSpeed=.003,this.runSpeed=.005,this.onGround=!1,this.jumpForce=.11,this.verticalFlySpeed=.15,this.viewOffset={x:0,y:1.625,z:0},this.bbox={x:-.3125,y:0,z:-.3125,w:.625,h:1.8125,d:.625},this.keys={up:!1,left:!1,down:!1,right:!1,jump:!1,crouch:!1},this.attachedCamera=null}loop(t){if(null!==this.attachedCamera){const{yaw:t,pitch:i}=this.attachedCamera.getRotation();this.rotation.yaw=t,this.rotation.pitch=i}const i=(this.keys.right?1:0)-(this.keys.left?1:0),s=(this.keys.down?1:0)-(this.keys.up?1:0);this.motion.x=Math.cos(this.rotation.yaw*Math.PI/180)*i*this.walkSpeed*t+Math.cos((this.rotation.yaw+90)*Math.PI/180)*s*this.walkSpeed*t,this.motion.z=Math.sin(this.rotation.yaw*Math.PI/180)*i*this.walkSpeed*t+Math.sin((this.rotation.yaw+90)*Math.PI/180)*s*this.walkSpeed*t,this.onGround?this.keys.jump||(this.motion.y=0):this.motion.y-=10/1800,this.move(this.motion.x,this.motion.y,this.motion.z)}move(t,i,s){this.position.x+=t,t>0&&this.intersection((t=>{const i=t.getPosition();this.position.x+this.bbox.x+this.bbox.w>i.x&&(this.position.x=i.x-this.bbox.x-this.bbox.w)})),t<0&&this.intersection((t=>{const i=t.getPosition();this.position.x+this.bbox.x<i.x+1&&(this.position.x=i.x+1-this.bbox.x)})),this.onGround=!1,this.position.y+=i,i>0&&this.intersection((t=>{const i=t.getPosition();this.position.y+this.bbox.y+this.bbox.h>i.y&&(this.position.y=i.y-this.bbox.y-this.bbox.h)})),i<0&&this.intersection((t=>{const i=t.getPosition();this.position.y+this.bbox.y<i.y+1&&(this.position.y=i.y+1-this.bbox.y,this.onGround=!0)})),this.position.z+=s,s>0&&this.intersection((t=>{const i=t.getPosition();this.position.z+this.bbox.z+this.bbox.d>i.z&&(this.position.z=i.z-this.bbox.z-this.bbox.d)})),s<0&&this.intersection((t=>{const i=t.getPosition();this.position.z+this.bbox.z<i.z+1&&(this.position.z=i.z+1-this.bbox.z)}))}intersection(t){const i={x:Math.floor(this.position.x+this.bbox.x),y:Math.floor(this.position.y+this.bbox.y),z:Math.floor(this.position.z+this.bbox.z)},s=Math.ceil(this.position.x+this.bbox.x+this.bbox.w),o=Math.ceil(this.position.y+this.bbox.y+this.bbox.h),e=Math.ceil(this.position.z+this.bbox.z+this.bbox.d);for(let h=i.x;h<=s;h++)for(let s=i.y;s<=o;s++)for(let o=i.z;o<=e;o++){const i=this.world.getBlock(h,s,o);(null==i?void 0:i.isSolid())&&this.checkCollision(i)&&t(i)}}checkCollision(t){const i=t.getPosition(),s=this.position.x+this.bbox.x,o=this.position.x+this.bbox.x+this.bbox.w,e=this.position.y+this.bbox.y,h=this.position.y+this.bbox.y+this.bbox.h,n=this.position.z+this.bbox.z,r=this.position.z+this.bbox.z+this.bbox.d,a=i.x,c=i.x+1,l=i.y,y=i.y+1,p=i.z,d=i.z+1;return o>a&&s<c&&h>l&&e<y&&r>p&&n<d}attachToCamera(t){this.attachedCamera=t}getCameraOffset(){return this.viewOffset}setKeyboardInput(t,i){this.keys.hasOwnProperty(t)&&(this.keys[t]=i),"jump"==t&&i&&(this.motion.y=this.jumpForce)}}(e,{x:8,y:6,z:16});e.addEntity(r),h.bindPosition(r),r.attachToCamera(h),n.onMouse(((t,i)=>{h.rotate(t,i)})),n.onKeyboard(((t,i)=>{r.setKeyboardInput(t,i)}));new class{constructor(t){this.loop=t}deltaTime(t,i){void 0===t&&(t=0),void 0===i&&(i=t);const s=t-i;this.loop(s),requestAnimationFrame((i=>{this.deltaTime(i,t)}))}}((t=>{n.loop(),h.loop(),e.loop(t)})).deltaTime();
